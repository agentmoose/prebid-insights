
> prebid-integration-monitor@1.0.0 dev
> node --loader ts-node/esm ./bin/dev.js

(node:3389) ExperimentalWarning: `--experimental-loader` may be removed in the future; instead use `register()`:
--import 'data:text/javascript,import { register } from "node:module"; import { pathToFileURL } from "node:url"; register("ts-node/esm", pathToFileURL("./"));'
(Use `node --trace-warnings ...` to show where the warning was created)
2025-06-01T21:39:58.389Z oclif:main process.execPath: /usr/bin/node
2025-06-01T21:39:58.389Z oclif:main process.execArgv: --loader,ts-node/esm
2025-06-01T21:39:58.392Z oclif:main process.argv: [ '/usr/bin/node', '/app/bin/dev.js' ]
2025-06-01T21:39:58.395Z oclif:find-root:root-plugin Finding root plugin using /app/bin/dev.js
2025-06-01T21:39:58.395Z oclif:find-root:root-plugin Finding root starting at /app/bin/dev.js
2025-06-01T21:39:58.395Z oclif:find-root:root-plugin Checking /app/bin/package.json
2025-06-01T21:39:58.396Z oclif:find-root:root-plugin Checking /app/package.json
2025-06-01T21:39:58.398Z oclif:find-root:root-plugin Found root by traversing up from starting point!
2025-06-01T21:39:58.398Z oclif:find-root:root-plugin Found root at /app
2025-06-01T21:39:58.399Z oclif:config loading core plugin from /app
2025-06-01T21:39:58.400Z oclif:read-pjson found oclif config in /app/package.json
2025-06-01T21:39:58.400Z oclif:config:prebid-integration-monitor command discovery options {
  globPatterns: [
    '**/*.+(js|cjs|mjs|ts|tsx|mts|cts)',
    '!**/*.+(d.ts|test.ts|test.js|spec.ts|spec.js|d.mts|d.cts)?(x)'
  ],
  strategy: 'pattern',
  target: './dist/commands'
}
2025-06-01T21:39:58.997Z oclif:config:ts-path tsconfig: {
  compilerOptions: {
    emitDecoratorMetadata: true,
    experimentalDecorators: true,
    allowSyntheticDefaultImports: true,
    forceConsistentCasingInFileNames: true,
    skipLibCheck: true,
    strict: true,
    resolveJsonModule: true,
    esModuleInterop: true,
    rootDir: './src',
    outDir: './dist',
    moduleResolution: 'nodenext',
    module: 'NodeNext',
    target: 'ES2020'
  },
  'ts-node': {}
}
2025-06-01T21:39:58.998Z oclif:config:ts-path Determining path for /app/dist/commands
2025-06-01T21:39:58.999Z oclif:config:ts-path Could not find tsx. Skipping tsx registration for /app.
2025-06-01T21:39:59.000Z oclif:config:ts-path Error: Cannot find module 'tsx/esm/api'
Require stack:
- /app/node_modules/@oclif/core/lib/config/ts-path.js
- /app/node_modules/@oclif/core/lib/help/index.js
- /app/node_modules/@oclif/core/lib/errors/handle.js
- /app/node_modules/@oclif/core/lib/errors/index.js
- /app/node_modules/@oclif/core/lib/config/config.js
- /app/node_modules/@oclif/core/lib/config/index.js
- /app/node_modules/@oclif/core/lib/command.js
- /app/node_modules/@oclif/core/lib/index.js
    at Module._resolveFilename (node:internal/modules/cjs/loader:1134:15)
    at Function.resolve (node:internal/modules/helpers:188:19)
    at registerTsx (/app/node_modules/@oclif/core/lib/config/ts-path.js:88:33)
    at determinePath (/app/node_modules/@oclif/core/lib/config/ts-path.js:207:15)
    at async tsPath (/app/node_modules/@oclif/core/lib/config/ts-path.js:287:16)
    at async Plugin.getCommandsDir (/app/node_modules/@oclif/core/lib/config/plugin.js:348:28)
    at async Plugin.getCommandIdsFromPattern (/app/node_modules/@oclif/core/lib/config/plugin.js:330:29)
    at async Plugin.getCommandIDs (/app/node_modules/@oclif/core/lib/config/plugin.js:313:23)
    at async Plugin._manifest (/app/node_modules/@oclif/core/lib/config/plugin.js:252:27)
    at async Plugin.load (/app/node_modules/@oclif/core/lib/config/plugin.js:205:25)
2025-06-01T21:39:59.001Z oclif:config:ts-path registering ts-node at /app
2025-06-01T21:39:59.003Z oclif:config:ts-path ts-node path: /app/node_modules/ts-node/dist/index.js
2025-06-01T21:39:59.056Z oclif:config:ts-path Successfully required ts-node
2025-06-01T21:39:59.056Z oclif:config:ts-path ts-node options: {
  compilerOptions: {
    emitDecoratorMetadata: true,
    experimentalDecorators: true,
    allowSyntheticDefaultImports: true,
    forceConsistentCasingInFileNames: true,
    skipLibCheck: true,
    strict: true,
    resolveJsonModule: true,
    esModuleInterop: true,
    outDir: './dist',
    moduleResolution: 'nodenext',
    module: 'NodeNext',
    target: 'ES2020',
    rootDirs: [ '/app/src' ],
    typeRoots: [ '/app/node_modules/@types' ]
  },
  cwd: '/app',
  esm: true,
  experimentalSpecifierResolution: 'explicit',
  scope: true,
  scopeDir: '/app',
  skipProject: true,
  transpileOnly: true
}
2025-06-01T21:39:59.093Z oclif:config:ts-path lib dir: /app/dist
2025-06-01T21:39:59.093Z oclif:config:ts-path src dir: /app/src
2025-06-01T21:39:59.093Z oclif:config:ts-path src directory to find: /app/src/commands
2025-06-01T21:39:59.094Z oclif:config:ts-path Found source directory for /app/dist/commands at /app/src/commands
2025-06-01T21:39:59.094Z oclif:config:prebid-integration-monitor loading IDs from /app/src/commands
2025-06-01T21:39:59.118Z oclif:config:prebid-integration-monitor found commands [ 'default', 'scan' ]
winston:create-logger: Define prototype method for "error"
winston:create-logger: Define prototype method for "warn"
winston:create-logger: Define prototype method for "info"
winston:create-logger: Define prototype method for "http"
winston:create-logger: Define prototype method for "verbose"
winston:create-logger: Define prototype method for "debug"
winston:create-logger: Define prototype method for "silly"
2025-06-01T21:40:04.655Z oclif:config:prebid-integration-monitor (import) /app/src/commands/default.ts
2025-06-01T21:40:05.996Z oclif:config:prebid-integration-monitor (import) /app/src/commands/scan.ts
2025-06-01T21:40:06.015Z oclif:config reading user plugins pjson /home/jules/.local/share/app/package.json
2025-06-01T21:40:06.017Z oclif:config config done
2025-06-01T21:40:06.018Z oclif:config start init hook
2025-06-01T21:40:06.019Z oclif:config init hook done
VERSION
  prebid-integration-monitor/1.0.0 linux-x64 node-v18.19.1

USAGE
  $ app [COMMAND]

COMMANDS
  default  Default command for prebid-integration-monitor. Runs the main
           monitoring logic.
  scan     Scans websites for Prebid.js integrations.

2025-06-01T21:40:06.041Z oclif:config start finally hook
2025-06-01T21:40:06.041Z oclif:config finally hook done
